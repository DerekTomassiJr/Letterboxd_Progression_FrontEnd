{"ast":null,"code":"var _s = $RefreshSig$();\n\n//Adapted from dev.to Form Validation in ReactJs\nimport React, { useState } from 'react';\nimport { omit } from 'lodash';\n\nconst useForm = callback => {\n  _s();\n\n  //Form values\n  const [values, setValues] = useState({}); //Errors\n\n  const [errors, setErrors] = useState({});\n\n  const validate = (event, name, value) => {\n    //A function to validate each input values\n    switch (name) {\n      case 'SearchSubmission':\n        if (value.length <= 4) {\n          // we will set the error state\n          setErrors({ ...errors,\n            SearchSubmission: 'Search atleast have 5 letters'\n          });\n        } else {\n          // set the error state empty or remove the error for username input\n          //omit function removes/omits the value from given object and returns a new object\n          let newObj = omit(errors, \"SearchSubmission\");\n          setErrors(newObj);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }; //A method to handle form inputs\n\n\n  const handleChange = event => {\n    //To stop default events    \n    event.persist();\n    let name = event.target.name;\n    let val = event.target.value;\n    validate(event, name, val); //Let's set these values in state\n\n    setValues({ ...values,\n      [name]: val\n    });\n  };\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n\n    if (Object.keys(errors).length === 0 && Object.keys(values).length !== 0) {\n      callback();\n    } else {\n      alert(\"There is an Error!\");\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  };\n};\n\n_s(useForm, \"oIbDGYi0uOTpTzOl9U/+/w4jPVs=\");\n\nexport default useForm;","map":{"version":3,"names":["React","useState","omit","useForm","callback","values","setValues","errors","setErrors","validate","event","name","value","length","SearchSubmission","newObj","handleChange","persist","target","val","handleSubmit","preventDefault","Object","keys","alert"],"sources":["/home/agoznzaga/Desktop/workspace/database-systems/DT-LetterBox/Letterboxd_Progression_FrontEnd/src/Hooks/useForm.js"],"sourcesContent":["//Adapted from dev.to Form Validation in ReactJs\n\nimport React, { useState } from 'react'\nimport {omit} from 'lodash'\n\nconst useForm = (callback) => {\n    \n    //Form values\n    const [values, setValues] = useState({});\n    //Errors\n    const [errors, setErrors] = useState({});\n\n\n\n    const validate = (event, name, value) => {\n        //A function to validate each input values\n\n        switch (name) {\n            case 'SearchSubmission':\n                if(value.length <= 4){\n                    // we will set the error state\n\n                    setErrors({\n                        ...errors,\n                        SearchSubmission:'Search atleast have 5 letters'\n                    })\n                }else{\n                    // set the error state empty or remove the error for username input\n\n                    //omit function removes/omits the value from given object and returns a new object\n                    let newObj = omit(errors, \"SearchSubmission\");\n                    setErrors(newObj);\n                    \n                }\n                break;\n        \n        \n            \n            default:\n                break;\n        }\n    }\n\n  //A method to handle form inputs\n    const handleChange = (event) => {\n        //To stop default events    \n        event.persist();\n\n        let name = event.target.name;\n        let val = event.target.value;\n\n        validate(event,name,val);\n        //Let's set these values in state\n\n        setValues({\n            ...values,\n            [name]:val,\n        })\n\n    }\n\n\n    const handleSubmit = (event) => {\n        if(event) event.preventDefault();\n\n        if(Object.keys(errors).length === 0 && Object.keys(values).length !==0 ){\n            callback();\n\n        }else{\n            alert(\"There is an Error!\");\n        }\n    }\n\n\n    return {\n        values,\n        errors,\n        handleChange,\n        handleSubmit\n    }\n}\n\nexport default useForm"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,QAAnB;;AAEA,MAAMC,OAAO,GAAIC,QAAD,IAAc;EAAA;;EAE1B;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAH0B,CAI1B;;EACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;EAIA,MAAMQ,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,KAAwB;IACrC;IAEA,QAAQD,IAAR;MACI,KAAK,kBAAL;QACI,IAAGC,KAAK,CAACC,MAAN,IAAgB,CAAnB,EAAqB;UACjB;UAEAL,SAAS,CAAC,EACN,GAAGD,MADG;YAENO,gBAAgB,EAAC;UAFX,CAAD,CAAT;QAIH,CAPD,MAOK;UACD;UAEA;UACA,IAAIC,MAAM,GAAGb,IAAI,CAACK,MAAD,EAAS,kBAAT,CAAjB;UACAC,SAAS,CAACO,MAAD,CAAT;QAEH;;QACD;;MAIJ;QACI;IAtBR;EAwBH,CA3BD,CAT0B,CAsC5B;;;EACE,MAAMC,YAAY,GAAIN,KAAD,IAAW;IAC5B;IACAA,KAAK,CAACO,OAAN;IAEA,IAAIN,IAAI,GAAGD,KAAK,CAACQ,MAAN,CAAaP,IAAxB;IACA,IAAIQ,GAAG,GAAGT,KAAK,CAACQ,MAAN,CAAaN,KAAvB;IAEAH,QAAQ,CAACC,KAAD,EAAOC,IAAP,EAAYQ,GAAZ,CAAR,CAP4B,CAQ5B;;IAEAb,SAAS,CAAC,EACN,GAAGD,MADG;MAEN,CAACM,IAAD,GAAOQ;IAFD,CAAD,CAAT;EAKH,CAfD;;EAkBA,MAAMC,YAAY,GAAIV,KAAD,IAAW;IAC5B,IAAGA,KAAH,EAAUA,KAAK,CAACW,cAAN;;IAEV,IAAGC,MAAM,CAACC,IAAP,CAAYhB,MAAZ,EAAoBM,MAApB,KAA+B,CAA/B,IAAoCS,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBQ,MAApB,KAA8B,CAArE,EAAwE;MACpET,QAAQ;IAEX,CAHD,MAGK;MACDoB,KAAK,CAAC,oBAAD,CAAL;IACH;EACJ,CATD;;EAYA,OAAO;IACHnB,MADG;IAEHE,MAFG;IAGHS,YAHG;IAIHI;EAJG,CAAP;AAMH,CA3ED;;GAAMjB,O;;AA6EN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}